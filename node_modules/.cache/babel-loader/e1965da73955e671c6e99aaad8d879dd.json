{"ast":null,"code":"import _slicedToArray from\"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/trivia-webApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/trivia-webApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/trivia-webApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useState}from'react';import Setup from\"../components/Setup\";import'bootstrap/dist/css/bootstrap.min.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var requestActivity=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var response,activityData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(url);case 2:response=_context.sent;_context.next=5;return response.json();case 5:activityData=_context.sent;return _context.abrupt(\"return\",activityData);case 7:case\"end\":return _context.stop();}}},_callee);}));return function requestActivity(_x){return _ref.apply(this,arguments);};}();var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),started=_useState2[0],setStarted=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),configured=_useState4[0],setConfigured=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),data=_useState6[0],setData=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),scorePresent=_useState8[0],setScorePresent=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),score=_useState10[0],setScore=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),total=_useState12[0],setTotal=_useState12[1];var baseURL=\"https://opentdb.com/api.php?amount=\";var startQuiz=function startQuiz(numOfQuestions,category,difficulty,type){var url=baseURL+numOfQuestions;if(category!==\"Any Category\"){url=url+\"&category=\"+category;}if(difficulty!==\"Any Difficulty\"){url=url+\"&difficulty=\"+difficulty.trim();}if(type!==\"Any Type\"){url=url+\"&type=\"+type.trim();}requestActivity(url).then(function(current){console.log(current);setData(current);});setConfigured(true);};return/*#__PURE__*/_jsxs(\"div\",{id:\"home\",className:\"main\",children:[/*#__PURE__*/_jsx(\"nav\",{className:\"navbar navbar-light\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid\",children:/*#__PURE__*/_jsx(\"a\",{className:\"navbar-brand mx-auto font\",href:\"#home\",onClick:function onClick(){setConfigured(false);setStarted(false);setScorePresent(false);},children:\"Trivia Land\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid\",children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Setup,{started:started,start:setStarted,configured:configured,configure:setConfigured,fetch:startQuiz,results:data[\"results\"],clearResults:setData,response:data[\"response_code\"],score:score,setScore:setScore,total:total,setTotal:setTotal,scorePresent:scorePresent,setScorePresent:setScorePresent})})})]});};export default App;","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/trivia-webApp/src/views/App.js"],"names":["useState","Setup","requestActivity","url","fetch","response","json","activityData","App","started","setStarted","configured","setConfigured","data","setData","scorePresent","setScorePresent","score","setScore","total","setTotal","baseURL","startQuiz","numOfQuestions","category","difficulty","type","trim","then","current","console","log"],"mappings":"mhBAAA,OAAQA,QAAR,KAAuB,OAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAO,sCAAP,C,wFAEA,GAAMC,CAAAA,eAAe,0FAAG,iBAAOC,GAAP,kKACCC,CAAAA,KAAK,CAACD,GAAD,CADN,QAChBE,QADgB,qCAEKA,CAAAA,QAAQ,CAACC,IAAT,EAFL,QAEhBC,YAFgB,+CAGbA,YAHa,wDAAH,kBAAfL,CAAAA,eAAe,4CAArB,CAMA,GAAMM,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eAEgBR,QAAQ,CAAC,KAAD,CAFxB,wCAEPS,OAFO,eAEEC,UAFF,8BAGsBV,QAAQ,CAAC,KAAD,CAH9B,yCAGPW,UAHO,eAGKC,aAHL,8BAIUZ,QAAQ,CAAC,EAAD,CAJlB,yCAIPa,IAJO,eAIDC,OAJC,8BAK0Bd,QAAQ,CAAC,KAAD,CALlC,yCAKPe,YALO,eAKOC,eALP,8BAMYhB,QAAQ,CAAC,CAAD,CANpB,0CAMPiB,KANO,gBAMAC,QANA,gCAOYlB,QAAQ,CAAC,CAAD,CAPpB,2CAOPmB,KAPO,gBAOAC,QAPA,gBASd,GAAMC,CAAAA,OAAO,CAAG,qCAAhB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,cAAD,CAAiBC,QAAjB,CAA2BC,UAA3B,CAAuCC,IAAvC,CAAgD,CAC9D,GAAIvB,CAAAA,GAAG,CAAGkB,OAAO,CAACE,cAAlB,CAEA,GAAIC,QAAQ,GAAK,cAAjB,CAAiC,CAC7BrB,GAAG,CAAGA,GAAG,CAAG,YAAN,CAAqBqB,QAA3B,CACH,CAED,GAAIC,UAAU,GAAK,gBAAnB,CAAqC,CACjCtB,GAAG,CAAGA,GAAG,CAAG,cAAN,CAAuBsB,UAAU,CAACE,IAAX,EAA7B,CACH,CAED,GAAID,IAAI,GAAK,UAAb,CAAyB,CACrBvB,GAAG,CAAGA,GAAG,CAAG,QAAN,CAAiBuB,IAAI,CAACC,IAAL,EAAvB,CACH,CAEDzB,eAAe,CAACC,GAAD,CAAf,CAAqByB,IAArB,CAA0B,SAAAC,OAAO,CAAI,CACjCC,OAAO,CAACC,GAAR,CAAYF,OAAZ,EACAf,OAAO,CAACe,OAAD,CAAP,CACH,CAHD,EAIAjB,aAAa,CAAC,IAAD,CAAb,CACH,CApBD,CAsBA,mBACI,aAAK,EAAE,CAAC,MAAR,CAAe,SAAS,CAAC,MAAzB,wBACI,YAAK,SAAS,CAAC,qBAAf,uBACI,YAAK,SAAS,CAAC,iBAAf,uBACI,UAAG,SAAS,CAAC,2BAAb,CAAyC,IAAI,CAAC,OAA9C,CAAsD,OAAO,CAAE,kBAAI,CAC/DA,aAAa,CAAC,KAAD,CAAb,CACAF,UAAU,CAAC,KAAD,CAAV,CACAM,eAAe,CAAC,KAAD,CAAf,CACC,CAJL,yBADJ,EADJ,EADJ,cAYI,YAAK,SAAS,CAAC,iBAAf,uBACI,kCACI,KAAC,KAAD,EAAO,OAAO,CAAEP,OAAhB,CAAyB,KAAK,CAAEC,UAAhC,CAA4C,UAAU,CAAEC,UAAxD,CAAoE,SAAS,CAAEC,aAA/E,CACA,KAAK,CAAEU,SADP,CACkB,OAAO,CAAET,IAAI,CAAC,SAAD,CAD/B,CAC4C,YAAY,CAAEC,OAD1D,CACmE,QAAQ,CAAED,IAAI,CAAC,eAAD,CADjF,CAEA,KAAK,CAAEI,KAFP,CAEc,QAAQ,CAAEC,QAFxB,CAEkC,KAAK,CAAEC,KAFzC,CAEgD,QAAQ,CAAEC,QAF1D,CAGA,YAAY,CAAEL,YAHd,CAG4B,eAAe,CAAEC,eAH7C,EADJ,EADJ,EAZJ,GADJ,CAuBH,CAxDD,CA4DA,cAAeR,CAAAA,GAAf","sourcesContent":["import {useState} from 'react';\nimport Setup from \"../components/Setup\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst requestActivity = async (url) => {\n    let response = await fetch(url);\n    let activityData = await response.json();\n    return activityData\n}\n\nconst App = () => {\n    \n    const [started, setStarted] = useState(false);\n    const [configured, setConfigured] = useState(false);\n    const [data, setData] = useState([]);\n    const [scorePresent, setScorePresent] = useState(false);\n    const [score, setScore] = useState(0)\n    const [total, setTotal] = useState(0)\n    \n    const baseURL = \"https://opentdb.com/api.php?amount=\"\n\n    const startQuiz = (numOfQuestions, category, difficulty, type) => {\n        let url = baseURL+numOfQuestions;\n\n        if (category !== \"Any Category\") {\n            url = url + \"&category=\" + category\n        }\n        \n        if (difficulty !== \"Any Difficulty\") {\n            url = url + \"&difficulty=\" + difficulty.trim()\n        }\n        \n        if (type !== \"Any Type\") {\n            url = url + \"&type=\" + type.trim()\n        }\n        \n        requestActivity(url).then(current => {\n            console.log(current)\n            setData(current)\n        })\n        setConfigured(true)\n    }\n\n    return (\n        <div id=\"home\" className=\"main\">\n            <nav className=\"navbar navbar-light\">\n                <div className=\"container-fluid\">\n                    <a className=\"navbar-brand mx-auto font\" href=\"#home\" onClick={()=>{\n                        setConfigured(false)\n                        setStarted(false)\n                        setScorePresent(false)\n                        }}>\n                        Trivia Land\n                    </a>\n                </div>\n            </nav>\n            <div className=\"container-fluid\">\n                <div>\n                    <Setup started={started} start={setStarted} configured={configured} configure={setConfigured} \n                    fetch={startQuiz} results={data[\"results\"]} clearResults={setData} response={data[\"response_code\"]}\n                    score={score} setScore={setScore} total={total} setTotal={setTotal} \n                    scorePresent={scorePresent} setScorePresent={setScorePresent}/>\n                </div>\n            </div>\n        </div>\n      )\n}\n\n    \n\nexport default App;"]},"metadata":{},"sourceType":"module"}
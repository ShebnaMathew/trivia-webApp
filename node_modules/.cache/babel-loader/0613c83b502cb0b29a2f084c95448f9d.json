{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/shebna_mathew_assignment3/src/views/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Setup from \"../components/Setup\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport bg from \"../../public/bg.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst requestActivity = async url => {\n  let response = await fetch(url);\n  let activityData = await response.json();\n  return activityData;\n};\n\nconst App = () => {\n  _s();\n\n  const [started, setStarted] = useState(false);\n  const [configured, setConfigured] = useState(false);\n  const [data, setData] = useState([]);\n  const [scorePresent, setScorePresent] = useState(false);\n  const [score, setScore] = useState(0);\n  const [total, setTotal] = useState(0);\n  const baseURL = \"https://opentdb.com/api.php?amount=\";\n\n  const startQuiz = (numOfQuestions, category, difficulty, type) => {\n    console.log(\"qs: \", numOfQuestions);\n    console.log(\"category: \", category);\n    console.log(\"difficulty: \", difficulty);\n    console.log(\"type: \", type);\n    let url = baseURL + numOfQuestions;\n\n    if (category !== \"Any Category\") {\n      url = url + \"&category=\" + category;\n    }\n\n    if (difficulty !== \"Any Difficulty\") {\n      url = url + \"&difficulty=\" + difficulty.trim();\n    }\n\n    if (type !== \"Any Type\") {\n      url = url + \"&type=\" + type.trim();\n    }\n\n    requestActivity(url).then(current => {\n      setData(current);\n    });\n    setConfigured(true);\n  };\n\n  console.log(\"dataaaaa: \", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    styles: {\n      backgroundImage: `url(${bg})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-dark bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"navbar-brand mx-auto\",\n          href: \"#\",\n          onClick: () => setStarted(false),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/trivia.jpg\",\n            alt: \"\",\n            width: \"200\",\n            height: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Let's play some Trivia!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Setup, {\n          started: started,\n          start: setStarted,\n          configured: configured,\n          configure: setConfigured,\n          fetch: startQuiz,\n          results: data[\"results\"],\n          response: data[\"response_code\"],\n          score: score,\n          setScore: setScore,\n          total: total,\n          setTotal: setTotal,\n          scorePresent: scorePresent,\n          setScorePresent: setScorePresent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"Sf1rrDlA0kX0SAeZNjxLN13SbnE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/shebna_mathew_assignment3/src/views/App.js"],"names":["useState","useEffect","Setup","bg","requestActivity","url","response","fetch","activityData","json","App","started","setStarted","configured","setConfigured","data","setData","scorePresent","setScorePresent","score","setScore","total","setTotal","baseURL","startQuiz","numOfQuestions","category","difficulty","type","console","log","trim","then","current","backgroundImage"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react';\nimport Setup from \"../components/Setup\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport bg from \"../../public/bg.jpg\"\n\n\nconst requestActivity = async (url) => {\n    let response = await fetch(url);\n    let activityData = await response.json();\n    return activityData\n  }\n\nconst App = () => {\n    \n    const [started, setStarted] = useState(false);\n    const [configured, setConfigured] = useState(false);\n    const [data, setData] = useState([]);\n    const [scorePresent, setScorePresent] = useState(false);\n    const [score, setScore] = useState(0)\n    const [total, setTotal] = useState(0)\n    \n    const baseURL = \"https://opentdb.com/api.php?amount=\"\n\n    const startQuiz = (numOfQuestions, category, difficulty, type) => {\n        console.log(\"qs: \",numOfQuestions)\n        console.log(\"category: \",category)\n        console.log(\"difficulty: \",difficulty)\n        console.log(\"type: \",type)\n        let url = baseURL+numOfQuestions;\n\n        if (category !== \"Any Category\") {\n            url = url + \"&category=\" + category\n        }\n        \n        if (difficulty !== \"Any Difficulty\") {\n            url = url + \"&difficulty=\" + difficulty.trim()\n        }\n        \n        if (type !== \"Any Type\") {\n            url = url + \"&type=\" + type.trim()\n        }\n        \n\n        requestActivity(url).then(current => {\n            setData(current)\n        })\n        setConfigured(true)\n    }\n\n    console.log(\"dataaaaa: \",data);\n\n    return (\n          <div className=\"main\" styles={{ backgroundImage:`url(${bg})` }}>\n            <nav className=\"navbar navbar-dark bg-dark\">\n                <div className=\"container-fluid\">\n                    \n                <a class=\"navbar-brand mx-auto\" href=\"#\" onClick={()=>setStarted(false)}>\n                    <img src='/trivia.jpg' alt=\"\" width=\"200\" height=\"50\"/>\n                </a>\n                </div>\n            </nav>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1 className=\"text-center\">\n                        Let's play some Trivia!\n                    </h1>\n                </div>\n                <div className=\"row\">\n                    <Setup started={started} start={setStarted} configured={configured} configure={setConfigured} \n                    fetch={startQuiz} results={data[\"results\"]} response={data[\"response_code\"]}\n                    score={score} setScore={setScore} total={total} setTotal={setTotal} \n                    scorePresent={scorePresent} setScorePresent={setScorePresent}/>\n                </div>\n            </div>\n        </div>\n      )\n      \n}\n\n    \n\nexport default App;"]},"metadata":{},"sourceType":"module"}
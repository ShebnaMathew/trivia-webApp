{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/shebna_mathew_assignment3/src/components/Choice.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Choice = props => {\n  _s();\n\n  const state = \"btn option \";\n  const [color, setColor] = useState(\"btn-outline-info\");\n\n  const checkResponse = answer => {\n    if (answer === props.correct) {\n      setColor(\"btn-outline-success\");\n    } else {\n      setColor(\"btn-outline-danger\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    class: state + color,\n    value: props.choice,\n    onClick: e => {\n      checkResponse(e.target.value);\n      setTimeout(setColor, 300, \"btn-outline-info\");\n      setTimeoutprops.showNext(props.questionNumber + 1);\n    },\n    children: props.choice\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Choice, \"bR8QHQKAsAxvTvvoJQ/rtm7+puE=\");\n\n_c = Choice;\nexport default Choice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Choice\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/shebna_mathew_assignment3/src/components/Choice.js"],"names":["useState","Choice","props","state","color","setColor","checkResponse","answer","correct","choice","e","target","value","setTimeout","setTimeoutprops","showNext","questionNumber"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAEtB,QAAMC,KAAK,GAAG,aAAd;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,kBAAD,CAAlC;;AAEA,QAAMM,aAAa,GAAIC,MAAD,IAAY;AAC9B,QAAIA,MAAM,KAAKL,KAAK,CAACM,OAArB,EAA8B;AAC1BH,MAAAA,QAAQ,CAAC,qBAAD,CAAR;AACH,KAFD,MAEO;AACPA,MAAAA,QAAQ,CAAC,oBAAD,CAAR;AACC;AACJ,GAND;;AASA,sBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAEF,KAAK,GAAGC,KAArC;AAA4C,IAAA,KAAK,EAAEF,KAAK,CAACO,MAAzD;AACQ,IAAA,OAAO,EACFC,CAAD,IAAO;AAEHJ,MAAAA,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACAC,MAAAA,UAAU,CAACR,QAAD,EAAW,GAAX,EAAgB,kBAAhB,CAAV;AACAS,MAAAA,eAAe,CAACC,QAAhB,CAAyBb,KAAK,CAACc,cAAN,GAAuB,CAAhD;AACH,KAPb;AAAA,cAQWd,KAAK,CAACO;AARjB;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAzBD;;GAAMR,M;;KAAAA,M;AA2BN,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\n\n\nconst Choice = (props) => {\n\n    const state = \"btn option \"\n    const [color, setColor] = useState(\"btn-outline-info\")\n\n    const checkResponse = (answer) => {\n        if (answer === props.correct) {\n            setColor(\"btn-outline-success\")\n        } else {\n        setColor(\"btn-outline-danger\")\n        }\n    }\n\n\n    return(\n        <button type=\"button\" class={state + color} value={props.choice} \n                onClick={\n                    (e) => {\n                        \n                        checkResponse(e.target.value)\n                        setTimeout(setColor, 300, \"btn-outline-info\")\n                        setTimeoutprops.showNext(props.questionNumber + 1);\n                    }\n                }>{props.choice}</button>\n    )\n}\n\nexport default Choice;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/shebna_mathew_assignment3/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst replaceCharacters = line => {\n  line = line.replaceAll(\"&quot;\", \"\\\"\");\n  line = line.replaceAll(\"&#34;\", \"\\\"\");\n  line = line.replaceAll(\"&apos;\", \"\\'\");\n  line = line.replaceAll(\"&#39;\", \"\\'\");\n  line = line.replaceAll(\"&#039;\", \"\\'\");\n  line = line.replaceAll(\"&nbsp;\", \" \");\n  line = line.replaceAll(\"&#160;\", \" \");\n  line = line.replaceAll(\"&lt;\", \"<\");\n  line = line.replaceAll(\"&#60;\", \"<\");\n  line = line.replaceAll(\"&gt;\", \">\");\n  line = line.replaceAll(\"&#62;\", \">\");\n  line = line.replaceAll(\"&amp;\", \"&\");\n  line = line.replaceAll(\"&#38;\", \"&\");\n  return line;\n};\n\nconst Question = props => {\n  _s();\n\n  const state = \"btn option \";\n  const [validation, setValidation] = useState(\"btn-outline-info\");\n\n  const checkResponse = answer => {\n    if (answer === props.correct) {\n      //setValidation(\"btn-outline-success\")\n      return true;\n    } //setValidation(\"btn-outline-danger\")\n\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"question\",\n      children: replaceCharacters(props.question)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"btn-group-vertical\",\n      children: props.choices.map(each => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: state + validation,\n        value: replaceCharacters(each),\n        onClick: e => {\n          this.removeClass(\"btn-outline-info\")(checkResponse(e.target.value)) ? this.addClass(\"btn-outline-success\") : this.ad;\n          setTimeout(setValidation, 300, \"btn-outline-info\");\n          props.showNext(props.questionNumber + 1);\n        },\n        children: replaceCharacters(each)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Question, \"tK89MQJ6Q7l/4XUQ+cIS6+9SDGU=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/shebna_mathew_assignment3/src/components/Question.js"],"names":["useEffect","useState","replaceCharacters","line","replaceAll","Question","props","state","validation","setValidation","checkResponse","answer","correct","question","choices","map","each","e","removeClass","target","value","addClass","ad","setTimeout","showNext","questionNumber"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst replaceCharacters = (line) => {\n    \n    line = line.replaceAll(\"&quot;\",\"\\\"\")\n    line = line.replaceAll(\"&#34;\",\"\\\"\")\n    line = line.replaceAll(\"&apos;\",\"\\'\")\n    line = line.replaceAll(\"&#39;\",\"\\'\")\n    line = line.replaceAll(\"&#039;\",\"\\'\")\n    line = line.replaceAll(\"&nbsp;\",\" \")\n    line = line.replaceAll(\"&#160;\",\" \")\n    line = line.replaceAll(\"&lt;\",\"<\")\n    line = line.replaceAll(\"&#60;\",\"<\")\n    line = line.replaceAll(\"&gt;\",\">\")\n    line = line.replaceAll(\"&#62;\",\">\")\n    line = line.replaceAll(\"&amp;\",\"&\")\n    line = line.replaceAll(\"&#38;\",\"&\")\n    \n    return line\n} \n\nconst Question = props => {\n\n    const state = \"btn option \"\n    const [validation, setValidation] = useState(\"btn-outline-info\")\n\n    const checkResponse = (answer) => {\n        if (answer === props.correct) {\n            //setValidation(\"btn-outline-success\")\n            return true\n        }\n        //setValidation(\"btn-outline-danger\")\n        return false\n    }\n\n\n    return (\n        <>\n        <h1 className=\"question\">{replaceCharacters(props.question)}</h1>\n        <div class=\"btn-group-vertical\">\n            {\n                props.choices.map((each) => \n                <button type=\"button\" class={state + validation} value={replaceCharacters(each)} \n                onClick={\n                    (e) => {\n                        this.removeClass(\"btn-outline-info\")\n                        (checkResponse(e.target.value)) ? this.addClass(\"btn-outline-success\"): this.ad\n                        setTimeout(setValidation, 300, \"btn-outline-info\")\n                        props.showNext(props.questionNumber + 1);\n                    }\n                }>{replaceCharacters(each)}</button>\n                )\n            }\n        </div>\n        </>\n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}
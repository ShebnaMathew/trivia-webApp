{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/shebna_mathew_assignment3/src/views/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Setup from \"../components/Setup\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport * as shuffle from 'shuffle-array';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst requestActivity = async url => {\n  let response = await fetch(url);\n  let activityData = await response.json();\n  return activityData;\n};\n\nconst App = () => {\n  _s();\n\n  const [started, setStarted] = useState(false);\n  const [configured, setConfigured] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [choices, setChoices] = useState([]);\n  const [showNext, setShowNext] = useState(false);\n  const question = useState([]);\n  const baseURL = \"https://opentdb.com/api.php?amount=\";\n\n  const startQuiz = (numOfQuestions, category, difficulty, type) => {\n    console.log(\"qs: \", numOfQuestions);\n    console.log(\"category: \", category);\n    console.log(\"difficulty: \", difficulty);\n    console.log(\"type: \", type);\n    let url = baseURL + numOfQuestions;\n\n    if (category !== \"Any Category\") {\n      url = url + \"&category=\" + category;\n    }\n\n    if (difficulty !== \"Any Difficulty\") {\n      url = url + \"&difficulty=\" + difficulty.trim();\n    }\n\n    if (type !== \"Any Type\") {\n      url = url + \"&type=\" + type.trim();\n    }\n\n    requestActivity(url).then(current => {\n      console.log(\"dataaaaa: \", current);\n      setData(current);\n    });\n    setConfigured(true);\n  };\n\n  useEffect(() => {\n    if (data.length > 0) {\n      console.log(\"resultsssss: \", data[\"results\"]);\n      setResults(data[\"results\"]);\n    }\n  }, [configured, data]);\n  useEffect(() => {\n    if (question.length > 0) {\n      let options = [];\n      options.push(...question[\"incorrect_answers\"], question[\"correct_answer\"]);\n      shuffle(options);\n      setChoices(options);\n    }\n  }, [question]);\n  useEffect(() => {\n    if (question.length > 0) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  }, [question, currentQuestion]);\n  useEffect(() => {\n    if (currentQuestion < results.length) {\n      setQuestion(results[currentQuestion]);\n    }\n  }, [showNext, currentQuestion, results]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main bg-gradient\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"navbar-brand mx-auto\",\n          href: \"#\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/trivia.jpg\",\n            alt: \"\",\n            width: \"200\",\n            height: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Let's begin!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Setup, {\n          started: started,\n          start: setStarted,\n          configured: configured,\n          configure: setConfigured,\n          fetch: startQuiz,\n          data: data,\n          response: data[\"response_code\"],\n          question: question,\n          choices: choices,\n          correct: question[\"correct_answer\"],\n          showNext: setShowNext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"BnzW0FWRSFzG/yac2DKNBWctdQs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/shebna_mathew_assignment3/src/views/App.js"],"names":["useState","useEffect","Setup","shuffle","requestActivity","url","response","fetch","activityData","json","App","started","setStarted","configured","setConfigured","data","setData","results","setResults","currentQuestion","setCurrentQuestion","choices","setChoices","showNext","setShowNext","question","baseURL","startQuiz","numOfQuestions","category","difficulty","type","console","log","trim","then","current","length","options","push","setQuestion"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react';\nimport Setup from \"../components/Setup\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport * as shuffle from 'shuffle-array';\n\n\nconst requestActivity = async (url) => {\n    let response = await fetch(url);\n    let activityData = await response.json();\n    return activityData\n  }\n\nconst App = () => {\n    \n    const [started, setStarted] = useState(false);\n    const [configured, setConfigured] = useState(false);\n    const [data, setData] = useState(\"\");\n    const [results, setResults] = useState([]);\n    \n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [choices, setChoices] = useState([]);\n    const [showNext, setShowNext] = useState(false);\n\n    const question = useState([]);\n    const baseURL = \"https://opentdb.com/api.php?amount=\"\n\n    \n    const startQuiz = (numOfQuestions, category, difficulty, type) => {\n        console.log(\"qs: \",numOfQuestions)\n        console.log(\"category: \",category)\n        console.log(\"difficulty: \",difficulty)\n        console.log(\"type: \",type)\n        let url = baseURL+numOfQuestions;\n\n        if (category !== \"Any Category\") {\n            url = url + \"&category=\" + category\n        }\n        \n        if (difficulty !== \"Any Difficulty\") {\n            url = url + \"&difficulty=\" + difficulty.trim()\n        }\n        \n        if (type !== \"Any Type\") {\n            url = url + \"&type=\" + type.trim()\n        }\n        \n\n        requestActivity(url).then(current => {\n            console.log(\"dataaaaa: \",current);\n            setData(current)\n            \n        })\n        setConfigured(true)\n    }\n\n    useEffect(() => {\n        if (data.length > 0){\n        console.log(\"resultsssss: \",data[\"results\"]);\n        setResults(data[\"results\"])\n        }\n    },[configured,data])\n\n    useEffect(() => {\n        if (question.length > 0) {\n        let options = []\n            options.push(...question[\"incorrect_answers\"],question[\"correct_answer\"])\n            shuffle(options)\n            setChoices(options)\n        }\n    },[question])\n\n    useEffect(() => {\n        if (question.length > 0) {\n        setCurrentQuestion(currentQuestion+1)\n        }\n    },[question,currentQuestion])\n\n    useEffect(() => {\n        if (currentQuestion < results.length) {\n            setQuestion(results[currentQuestion])\n        }\n    }\n    ,[showNext,currentQuestion,results])\n\n    return (\n          <div className=\"main bg-gradient\">\n            <nav className=\"navbar navbar-light bg-light\">\n                <div className=\"container-fluid\">\n                    \n                <a class=\"navbar-brand mx-auto\" href=\"#\">\n                    <img src='/trivia.jpg' alt=\"\" width=\"200\" height=\"50\"/>\n                </a>\n                </div>\n            </nav>\n            <div className=\"container\">\n            <div className=\"row\">\n                    <h1 className=\"text-center\">\n                        Let's begin!\n                    </h1>\n                </div>\n                <div className=\"row\">\n                    <Setup started={started} start={setStarted} configured={configured} configure={setConfigured} \n                    fetch={startQuiz} data={data} response={data[\"response_code\"]} question={question}\n                    choices={choices} correct={question[\"correct_answer\"]} showNext={setShowNext}/>\n                </div>\n                <div className=\"row\">\n                    \n                </div>\n\n            </div>\n        </div>\n      )\n      \n}\n\n    \n\nexport default App;"]},"metadata":{},"sourceType":"module"}